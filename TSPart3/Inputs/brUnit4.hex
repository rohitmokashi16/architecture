00000000: 201e0400	#        addi r30, r0, stack   ; use r30 as stack pointer
00000004: 23dd0000	#        addi r29, r30, 0      ; use r29 as frame pointer
00000008: 20010064	#        addi r1, r0, op
0000000c: 8c210000	#        lw r1, 0(r1)
00000010: 20020068	#        addi r2, r0, s1
00000014: 44400003	#        trap r2, 3    
00000018: 44200001	#        trap r1, 1
0000001c: 20020076	#        addi r2, r0, s2
00000020: 44400003	#        trap r2, 3
00000024: afc1fffc	#        sw -4(r30), r1
00000028: 23defff4	#        addi r30, r30, -12     ; make room for the param, ret addr, frame ptr
0000002c: 0c000010	#        jal addOne
00000030: 44200001	#        trap r1, 1            ; print out r1
00000034: 20020081	#        addi r2, r0, nl
00000038: 44400003	#        trap r2, 3
0000003c: 44000000	#        trap r0, 0            ; halt
00000040: afdf0004	#addOne: sw 4(r30), r31        ; save return address
00000044: afdd0000	#        sw 0(r30), r29        ; store frame pointer
00000048: 23dd0000	#        addi r29, r30, 0      ; adjust frame pointer
0000004c: 8fa10008	#        lw r1, 8(r29)         ; get op
00000050: 20210001	#        addi r1, r1, 1        ; add one; result is returned in r1
00000054: 23be0000	#        addi r30, r29, 0      ; set esp back to ebp
00000058: 8fdd0000	#        lw r29, 0(r30)       ; get old ebp 
0000005c: 8fdf0004	#        lw r31, 4(r30)        ; get ret addr
00000060: 4be00000	#        jr r31
00000064: 0000006f    	# 111
00000068: 0a5468652073756d206f662000	#"\nThe sum of "
00000076: 20616e6420312069732000	#" and 1 is "
00000081: 0a00	#"\n"
00000400: 00000000	#stack:  
